import{_ as s,c as e,o as a,a1 as i}from"./chunks/framework.aHVR0oKy.js";const g=JSON.parse('{"title":"Samples","description":"","frontmatter":{},"headers":[],"relativePath":"use-samples.md","filePath":"use-samples.md"}'),l={name:"use-samples.md"},t=i(`<h1 id="samples" tabindex="-1">Samples <a class="header-anchor" href="#samples" aria-label="Permalink to &quot;Samples&quot;">​</a></h1><p>By setting the <code>loadSamples</code> entry to <code>true</code>, you can get some automatically loaded samples.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Glicol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;glicol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { seq } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;glicol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> glicol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Glicol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  loadSamples: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>Call <code>glicol.showAllSamples()</code> to see them in the console.</p><h3 id="sample-playback" tabindex="-1">Sample playback <a class="header-anchor" href="#sample-playback" aria-label="Permalink to &quot;Sample playback&quot;">​</a></h3><p>You play samples by using the <code>sp</code> node (sample-playback).</p><p>It&#39;s triggered by any non-zero value: 1.0 will trigger the normal speed playback.</p><p>2.0 double the speed thus octave higher; 0.5 octave lower.</p><p>Thus, the <code>imp</code> node is good for a regular triggering:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">glicol.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">play</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  o: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">imp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;808bd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="the-sequencer-seq-node" tabindex="-1">The sequencer(seq) node <a class="header-anchor" href="#the-sequencer-seq-node" aria-label="Permalink to &quot;The sequencer(seq) node&quot;">​</a></h3><p>However, a more usefull tool is the <code>seq</code> node.</p><p>The &quot;seq&quot; node takes unlimited number of parameters called &quot;notes&quot;, seperated by spaces.</p><p>These &quot;notes&quot; will equally divide one bar music.</p><p>Note can be midi number, rest _, or compound note such as _60.</p><p>Compound notes are further equally divided by the total number of midi(note) and rest(_)</p><p>I will cover how to make more complicated sequence pattern later.</p><h3 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;Settings&quot;">​</a></h3><p>You can also call <code>glicol.addSampleFiles(name, url)</code> to load your own samples.</p><p>The <code>name</code> is what you want to call your sample in Glicol.</p><p>The <code>url</code> is optional; if not provided, a local file loader will open for you to load samples.</p><p>You can also call <code>glicol.setBPM(bpmNumber)</code> to set the BPM. The default time signature is 4/4.</p><blockquote><p>More settings such as bar duration or cycle dur will come soon.</p></blockquote><h3 id="full-project" tabindex="-1">Full project <a class="header-anchor" href="#full-project" aria-label="Permalink to &quot;Full project&quot;">​</a></h3><p><a href="https://stackblitz.com/edit/glicol-use-samples" target="_blank" rel="noreferrer">https://stackblitz.com/edit/glicol-use-samples</a></p>`,25),n=[t];function p(o,h,r,d,c,k){return a(),e("div",null,n)}const m=s(l,[["render",p]]);export{g as __pageData,m as default};
